---
# version
date: 2 Junly 2013
author: Graham THE Ollis
company: dc.pm.org
location: dc.pm.org
title: RESTful APIs in Perl with Clustericious
theme: yatil

css: |
  div.slide ul li li { margin-top: 0; }
  div.slide ul li { margin-top: 0.25em; }
  div.slide ul { margin-bottom: 0.25em; }
  div.slide pre.sh_perl { margin-top: 0.5em; margin-bottom: 0.5em; }
  div.slide p { margin-top: 0.5em; margin-bottom: 0.5em; }
  div.slide table.protocol_stack { width: 100%; font-size: 0.6em; }
  div.slide table.protocol_stack tr td { border: 1px solid black; padding-left: 1em; padding-right: 1em; text-align: center; }
  div.slide table.protocol_stack tr th {
    border: 1px solid black;
    padding-left: 1em;
    padding-right: 1em; text-align: center;
    width: 50%;
  }
  div.slide pre { font-size: 0.5em; }

title_page:
  - (and Mojolicious)
  - Graham THE Ollis
  - 2 July 2013

slides:
  - - Overview
    - Web Services
    - - XML-RPC/SOAP
      - REST
    - Mojolicious::Lite
    - Clustericious
    - - Server
      - Client
      - Config
    - Example Services
    - - PlugAuth
      - Yars
      
###
### Web Services
### - XML-RPC/SOAP
### - REST

  - - Network Service
    - text:
        file: ftp.txt
      height: 16
    - html:
        file: network.html
  - - Firewalls
    - html: |
              <!-- 10x6.74 -->
              <img style="height: 15em; width: 10.11em;" src="http://www.wdlabs.com/twilight/media/130628/gt0_2257.jpg" />
  - - Web Service
    - sh_xml:
        file: soap.xml
      height: 16
    - html:
        file: web.html
  - - RESTful Web Service
    - html: |
              <pre style="height: 16em">
              PUT /book/978-3-16-148410-0
              GET /book/978-3-16-148410-0
              POST /book/978-3-16-148410-0
              DELETE /book/978-3-16-148410-0
              
              Formats: JSON, XML, YAML, JPEG, etc.
              (whatever is appropriate)
              Content negotiation
              </pre>
    - html:
        file: rest.html
  - - REST request vs. browser request
    - one resource
    - - REST
      - html: |
                <pre>
                GET /book/978-3-16-148410-0.json
                </pre>
      - Browser
      - html: |
                <pre>
                GET /book/978-3-16-148410-0.html
                </pre>
      - or use content negotiation
      - html: |
                <pre>
                GET /book/978-3-16-148410-0
                </pre>
    - one handler
    - - sh_perl: |
                   get '/book/:isbn' => sub {
                     my($c) = @_;
                     my $book = lookup_book_by_isbn($c->param('isbn'));
                     $c->{autodata} = $book->as_hash;
                   }
  - - Web Services
    - SOAP
    - - SOAP::Lite
    - XML-RPC
    - - XML::RPC
      - RPC::XML
    - REST
    - - Catalyst
      - Mojolicious
      - Clustericious
      - Dancer
  - - Mojolicious
    - Good
    - - Complete web client/server framework
      - No non-core dependencies
      - Non-blocking (uses EV if available)
      - WebSockets
      - Consistent and well covered documentation
    - Bad
    - - Not invented here 
      - API somewhat unstable
      - Documentation is not always helpful

###
### Mojolicious::Lite

  - - Mojolicious::Lite
    - p: A simple example
    - sh_perl: |
                 #!/usr/bin/perl
                 use Mojolicious:Lite
                 
                 get '/:foo' => sub {
                   my $self = shift;
                   my $foo  = $self->param('foo');
                   $self->render(text => "Hello from $foo.");
                 };
                 
                 app->start;
  - - Mojolicious::Lite
    - p: With a default argument
    - sh_perl: |
                 #!/usr/bin/perl
                 use Mojolicious:Lite
                 
                 get '/:foo' => { foo => 'mojolicious' } => sub {
                   my $self = shift;
                   my $foo  = $self->param('foo');
                   $self->render(text => "Hello from $foo.");
                 };
              
                 app->start;
  - - Mojolicious (full app)
    - Traffic cone (substitute website during maintenance)
    - sh_perl: |
                 package App::TrafficCone;
                 use Mojo::Base qw( Mojolicious );
                 
                 sub startup {
                   my($self, $config) = @_;
                   $self->routes->any('/*x' => { x => 'y' } => sub {
                     my $c = shift;
                     $c->render( 
                       text   => 'Down for maintenance', 
                       status => 503,
                     );
                   }
                 }
    - sh_perl: |
                 #!/usr/bin/perl
                 use Mojolicious::Commands;
                 Mojolicious::Commands->start_app('App::TrafficCone');

###
### Clustericious
### - Server

  - - Clustericious
    - bin/yourapp
    - YourApp -> inherits Clustericious::App
    - YourApp::Routes -> uses Clustericious::RouteBuilder
    - model (if needed) goes anywhere
    - standard set of routes
    - - /version
      - /status
      - /api
      - /api/:table

###
### Clustericious
### - Client

  - - Clustericious::Client
    - bin/yourappclient
    - YourApp::Client ->uses Clustericious::Client
    - sh_perl: |
                  package YourApp::Client;
                  use Clustericious::Client;
                  
                  route welcome => 'GET', '/';
                  route auth => 'GET', '/auth';

#    - YourApp/Client.pm inherits from Clustericious::Client
#    - define api using meta definitions
#    - - you get a basic Perl client for free
#      - you get a command line client for free
#      - can generate JavaScript client using meta data

###
### Clustericious
### - Config

  - - Clustericious::Config
    - YAML or JSON format
    - Used by both clients and servers
    - Preprocessed using Mojo::Template
    - One config can "call" or "include" another
    - text:
        file: PlugAuth.conf
  - - Clustericious::Config
    - text:
        file: common.conf
  - - Clustericious::Config
    - text:
        file: PlugAuth.debug
      height: 28

###
### Example Services
### - PlugAuth

###
### Example Services
### - Yars
